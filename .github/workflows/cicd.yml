name: Build and Deploy Docker Image

on:
  workflow_dispatch:  # Allows manual trigger of the workflow
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
        docker build -t my-app:latest .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: |
        docker tag my-app:latest ${{ secrets.DOCKER_USERNAME }}/my-app:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Set up SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        VM_HOST: ${{ secrets.VM_HOST }}
      run: |
        # Configure SSH key
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # Add VM host to known_hosts
        ssh-keyscan -H $VM_HOST >> ~/.ssh/known_hosts

        # Print known_hosts for debugging
        cat ~/.ssh/known_hosts

    - name: Deploy Docker container to VM
      env:
        VM_USER: ${{ secrets.VM_USER }}
        VM_HOST: ${{ secrets.VM_HOST }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        # Deploy Docker container using SSH
        ssh -o StrictHostKeyChecking=no $VM_USER@$VM_HOST << EOF
          docker pull $DOCKER_USERNAME/my-app:latest
          docker stop my-app || true
          docker rm my-app || true
          docker run -d -p 80:80 --name my-app $DOCKER_USERNAME/my-app:latest
        EOF
